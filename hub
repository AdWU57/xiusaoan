local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Espectroxs/CLT-HUB/refs/heads/main/Library%20(1).txt", true))()
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local VirtualUser = game:GetService("VirtualUser")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

local window = library:AddWindow("               Xypher", {main_color = Color3.fromRGB(255,1,1), min_size = Vector2.new(225,395), can_resize = true})
local farmTab = window:AddTab("Farm")
local miscTab = window:AddTab("Misc")
local teleportTab = window:AddTab("Teleport")
local petsTab = window:AddTab("Pets")

local speedConfig = {autoRock=0.01, rebirthTarget=0.1, autoSize=0.2, autoTeleport=0.4, autoExercise=0.08, autoHatch=0.05}

game:GetService("Lighting").GlobalShadows = false
for _, obj in pairs(workspace:GetDescendants()) do if obj:IsA("BasePart") then obj.CastShadow=false end end
workspace.DescendantAdded:Connect(function(obj) if obj:IsA("BasePart") then obj.CastShadow=false end end)

farmTab:Show()
farmTab:AddLabel("                    By LegHHH")

local autoFarmFolder = farmTab:AddFolder("                 Farm")
autoFarmFolder:AddSwitch("Auto Weight", function(bool)
    _G.FastWeight = bool
    if bool then
        task.spawn(function()
            while _G.FastWeight do
                local player = game.Players.LocalPlayer
                local character = player.Character
                if character and not character:FindFirstChild("Weight") then
                    local tool = player.Backpack:FindFirstChild("Weight")
                    if tool then
                        if tool:FindFirstChild("repTime") then
                            tool.repTime.Value = 0
                        end
                        character.Humanoid:EquipTool(tool)
                    end
                elseif character and character:FindFirstChild("Weight") then
                    local equipped = character:FindFirstChild("Weight")
                    if equipped:FindFirstChild("repTime") then
                        equipped.repTime.Value = 0
                    end
                end
                task.wait(0.1)
            end
        end)
        task.spawn(function()
            while _G.FastWeight do
                game.Players.LocalPlayer.muscleEvent:FireServer("rep")
                task.wait()
            end
        end)
    else
        local character = game.Players.LocalPlayer.Character
        local equipped = character:FindFirstChild("Weight")
        if equipped then
            if equipped:FindFirstChild("repTime") then
                equipped.repTime.Value = 1
            end
            equipped.Parent = game.Players.LocalPlayer.Backpack
        end
        local tool = game.Players.LocalPlayer.Backpack:FindFirstChild("Weight")
        if tool and tool:FindFirstChild("repTime") then
            tool.repTime.Value = 1
        end
    end
end)

autoFarmFolder:AddSwitch("Auto Punch", function(bool)
    _G.FastPunch = bool
    if bool then
        task.spawn(function()
            while _G.FastPunch do
                local player = game.Players.LocalPlayer
                local character = player.Character
                if character and not character:FindFirstChild("Punch") then
                    local tool = player.Backpack:FindFirstChild("Punch")
                    if tool then
                        if tool:FindFirstChild("attackTime") then
                            tool.attackTime.Value = 0
                        end
                        character.Humanoid:EquipTool(tool)
                    end
                elseif character and character:FindFirstChild("Punch") then
                    local equipped = character:FindFirstChild("Punch")
                    if equipped:FindFirstChild("attackTime") then
                        equipped.attackTime.Value = 0
                    end
                end
                task.wait(0.1)
            end
        end)
        task.spawn(function()
            while _G.FastPunch do
                local player = game.Players.LocalPlayer
                player.muscleEvent:FireServer("punch", "rightHand")
                player.muscleEvent:FireServer("punch", "leftHand")
                local character = player.Character
                if character then
                    local tool = character:FindFirstChild("Punch")
                    if tool then
                        tool:Activate()
                    end
                end
                task.wait()
            end
        end)
    else
        local character = game.Players.LocalPlayer.Character
        local equipped = character:FindFirstChild("Punch")
        if equipped then
            if equipped:FindFirstChild("attackTime") then
                equipped.attackTime.Value = 0.35
            end
            equipped.Parent = game.Players.LocalPlayer.Backpack
        end
        local tool = game.Players.LocalPlayer.Backpack:FindFirstChild("Punch")
        if tool and tool:FindFirstChild("attackTime") then
            tool.attackTime.Value = 0.35
        end
    end
end)

autoFarmFolder:AddSwitch("Auto Situps", function(bool)
    _G.FastSitups = bool
    if bool then
        task.spawn(function()
            while _G.FastSitups do
                local player = game.Players.LocalPlayer
                local character = player.Character
                if character and not character:FindFirstChild("Situps") then
                    local tool = player.Backpack:FindFirstChild("Situps")
                    if tool then
                        if tool:FindFirstChild("repTime") then
                            tool.repTime.Value = 0
                        end
                        character.Humanoid:EquipTool(tool)
                    end
                elseif character and character:FindFirstChild("Situps") then
                    local equipped = character:FindFirstChild("Situps")
                    if equipped:FindFirstChild("repTime") then
                        equipped.repTime.Value = 0
                    end
                end
                task.wait(0.1)
            end
        end)
        task.spawn(function()
            while _G.FastSitups do
                game.Players.LocalPlayer.muscleEvent:FireServer("rep")
                task.wait()
            end
        end)
    else
        local character = game.Players.LocalPlayer.Character
        local equipped = character:FindFirstChild("Situps")
        if equipped then
            if equipped:FindFirstChild("repTime") then
                equipped.repTime.Value = 1
            end
            equipped.Parent = game.Players.LocalPlayer.Backpack
        end
        local tool = game.Players.LocalPlayer.Backpack:FindFirstChild("Situps")
        if tool and tool:FindFirstChild("repTime") then
            tool.repTime.Value = 1
        end
    end
end)

autoFarmFolder:AddSwitch("Auto Pushups", function(bool)
    _G.FastPushups = bool
    if bool then
        task.spawn(function()
            while _G.FastPushups do
                local player = game.Players.LocalPlayer
                local character = player.Character
                if character and not character:FindFirstChild("Pushups") then
                    local tool = player.Backpack:FindFirstChild("Pushups")
                    if tool then
                        if tool:FindFirstChild("repTime") then
                            tool.repTime.Value = 0
                        end
                        character.Humanoid:EquipTool(tool)
                    end
                elseif character and character:FindFirstChild("Pushups") then
                    local equipped = character:FindFirstChild("Pushups")
                    if equipped:FindFirstChild("repTime") then
                        equipped.repTime.Value = 0
                    end
                end
                task.wait(0.1)
            end
        end)
        task.spawn(function()
            while _G.FastPushups do
                game.Players.LocalPlayer.muscleEvent:FireServer("rep")
                task.wait()
            end
        end)
    else
        local character = game.Players.LocalPlayer.Character
        local equipped = character:FindFirstChild("Pushups")
        if equipped then
            if equipped:FindFirstChild("repTime") then
                equipped.repTime.Value = 1
            end
            equipped.Parent = game.Players.LocalPlayer.Backpack
        end
        local tool = game.Players.LocalPlayer.Backpack:FindFirstChild("Pushups")
        if tool and tool:FindFirstChild("repTime") then
            tool.repTime.Value = 1
        end
    end
end)

autoFarmFolder:AddSwitch("Auto Handstands", function(bool)
    _G.FastHandstands = bool
    if bool then
        task.spawn(function()
            while _G.FastHandstands do
                local player = game.Players.LocalPlayer
                local character = player.Character
                if character and not character:FindFirstChild("Handstands") then
                    local tool = player.Backpack:FindFirstChild("Handstands")
                    if tool then
                        if tool:FindFirstChild("repTime") then
                            tool.repTime.Value = 0
                        end
                        character.Humanoid:EquipTool(tool)
                    end
                elseif character and character:FindFirstChild("Handstands") then
                    local equipped = character:FindFirstChild("Handstands")
                    if equipped:FindFirstChild("repTime") then
                        equipped.repTime.Value = 0
                    end
                end
                task.wait(0.1)
            end
        end)
        task.spawn(function()
            while _G.FastHandstands do
                game.Players.LocalPlayer.muscleEvent:FireServer("rep")
                task.wait()
            end
        end)
    else
        local character = game.Players.LocalPlayer.Character
        local equipped = character:FindFirstChild("Handstands")
        if equipped then
            if equipped:FindFirstChild("repTime") then
                equipped.repTime.Value = 1
            end
            equipped.Parent = game.Players.LocalPlayer.Backpack
        end
        local tool = game.Players.LocalPlayer.Backpack:FindFirstChild("Handstands")
        if tool and tool:FindFirstChild("repTime") then
            tool.repTime.Value = 1
        end
    end
end)


local jungleGymFolder = farmTab:AddFolder("                 Jungle Gym")
local VIM=game:GetService("VirtualInputManager")

local function pressE()
    VIM:SendKeyEvent(true,"E",false,game)
    task.wait(0.1)
    VIM:SendKeyEvent(false,"E",false,game)
end

local jungleMachines={["Jungle Bench Press"]=CFrame.new(-8173,64,1898),["Jungle Squat"]=CFrame.new(-8352,34,2878),["Jungle Lift"]=CFrame.new(-8666,34,2070),["Jungle Boulder"]=CFrame.new(-8621,34,2684)}

for name,pos in pairs(jungleMachines) do
    local workingFlag="_working_"..name
    _G[workingFlag]=false
    jungleGymFolder:AddSwitch(name,function(enabled)
        _G[workingFlag]=enabled
        if enabled then
            local hrp=LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                hrp.CFrame=pos
                task.wait(0.1)
                pressE()
                task.spawn(function()
                    while _G[workingFlag] do
                        LocalPlayer.muscleEvent:FireServer("rep")
                        task.wait()
                    end
                end)
            end
        end
    end)
end

local autoRockFolder = farmTab:AddFolder("                 Rocks")

local rocks = {
    ["Tiny Rock"] = 0,
    ["Starter Rock"] = 100,
    ["Golden Rock"] = 5000,
    ["Frozen Rock"] = 150000,
    ["Mythical Rock"] = 400000,
    ["Eternal Rock"] = 750000,
    ["Legend Rock"] = 1000000,
    ["Muscle King Rock"] = 5000000,
    ["Jungle Rock"] = 10000000
}

_G.FastPunch = false
local punchConnection

local function safeSetAttackTime(tool, val)
    if tool and tool:FindFirstChild("attackTime") then
        tool.attackTime.Value = val
    end
end

local function ensurePunchEquipped()
    local character = LocalPlayer.Character
    if not character then return end

    local punch = character:FindFirstChild("Punch")
    if not punch then
        local tool = LocalPlayer.Backpack:FindFirstChild("Punch")
        if tool then
            safeSetAttackTime(tool, 0)
            character.Humanoid:EquipTool(tool)
        end
    else
        safeSetAttackTime(punch, 0)
    end
end

local function forceUnequipPunch()
    local character = LocalPlayer.Character
    if not character then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid:UnequipTools()
    end

    local punch = character:FindFirstChild("Punch")
    if punch then
        safeSetAttackTime(punch, 0.35)
        punch.Parent = LocalPlayer.Backpack
    end

    local backpackPunch = LocalPlayer.Backpack:FindFirstChild("Punch")
    if backpackPunch then
        safeSetAttackTime(backpackPunch, 0.35)
    end
end

local function setFastPunch(state)
    _G.FastPunch = state
    if state then
        if not punchConnection then
            punchConnection = RunService.Heartbeat:Connect(function()
                ensurePunchEquipped()
                LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
            end)
        end
    else
        if punchConnection then
            punchConnection:Disconnect()
            punchConnection = nil
        end
        forceUnequipPunch()
    end
end

local function attackRock(rockValue)
    for _, v in pairs(workspace.machinesFolder:GetDescendants()) do
        if v.Name == "neededDurability" and v.Value == rockValue 
           and LocalPlayer.Character 
           and LocalPlayer.Character:FindFirstChild("LeftHand") 
           and LocalPlayer.Character:FindFirstChild("RightHand") then

            local left = LocalPlayer.Character.LeftHand
            local right = LocalPlayer.Character.RightHand

            if not LocalPlayer.Character:FindFirstChild("Punch") then
                local tool = LocalPlayer.Backpack:FindFirstChild("Punch")
                if tool then
                    LocalPlayer.Character.Humanoid:EquipTool(tool)
                end
            end

            firetouchinterest(v.Parent.Rock, right, 0)
            firetouchinterest(v.Parent.Rock, right, 1)
            firetouchinterest(v.Parent.Rock, left, 0)
            firetouchinterest(v.Parent.Rock, left, 1)

            setFastPunch(true)
        end
    end
end

local rockList = {}
for name, value in pairs(rocks) do
    table.insert(rockList, {name=name, value=value})
end
table.sort(rockList, function(a, b) return a.value < b.value end)

for _, rock in ipairs(rockList) do
    autoRockFolder:AddSwitch(rock.name, function(enabled)
        getgenv().autoFarm = enabled
        if enabled then
            task.spawn(function()
                while getgenv().autoFarm do
                    task.wait(speedConfig.autoRock)
                    if LocalPlayer.Durability.Value >= rock.value then
                        attackRock(rock.value)
                    end
                end
            end)
        else
            setFastPunch(false)
        end
    end)
end



local rebirthsFolder=farmTab:AddFolder("                 Rebirths")
local targetRebirthValue=0
local targetSwitch
rebirthsFolder:AddTextBox("Rebirth Target",function(text)
    local newValue=tonumber(text)
    if newValue and newValue>0 then targetRebirthValue=newValue end
end)

targetSwitch=rebirthsFolder:AddSwitch("Auto Rebirth (Target)",function(bool)
    _G.targetRebirthActive=bool
    if bool then
        task.spawn(function()
            while _G.targetRebirthActive do
                task.wait(speedConfig.rebirthTarget)
                if LocalPlayer.leaderstats.Rebirths.Value>=targetRebirthValue then
                    targetSwitch:Set(false)
                    _G.targetRebirthActive=false
                    break
                end
                ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
            end
        end)
    end
end)

rebirthsFolder:AddSwitch("Auto Size 0",function(bool)
    _G.autoSizeActive=bool
    if bool then
        task.spawn(function()
            while _G.autoSizeActive do
                task.wait(speedConfig.autoSize)
                ReplicatedStorage.rEvents.changeSpeedSizeRemote:InvokeServer("changeSize",0)
            end
        end)
    end
end)

rebirthsFolder:AddSwitch("Auto TP Muscle King",function(bool)
    _G.teleportActive=bool
    if bool then
        task.spawn(function()
            while _G.teleportActive do
                task.wait(speedConfig.autoTeleport)
                local hrp=LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                if hrp then hrp.CFrame=CFrame.new(-8646,17,-5738) end
            end
        end)
    end
end)

miscTab:AddButton("Remove Portals",function()
    for _,d in pairs(game:GetDescendants()) do if d.Name=="RobloxForwardPortals" then d:Destroy() end end
    if _G.AdRemovalConnection then _G.AdRemovalConnection:Disconnect() end
    _G.AdRemovalConnection=game.DescendantAdded:Connect(function(d)
        if d.Name=="RobloxForwardPortals" then d:Destroy() end
    end)
end)

miscTab:AddButton("Gamepass AutoLift",function()
    local folder=ReplicatedStorage:FindFirstChild("gamepassIds")
    if folder then
        for _,gp in pairs(folder:GetChildren()) do
            local val=Instance.new("IntValue")
            val.Name,val.Value,val.Parent=gp.Name,gp.Value,LocalPlayer.ownedGamepasses
        end
    end
end)

miscTab:AddButton("Anti Lag",function()
    local playerGui=LocalPlayer:WaitForChild("PlayerGui")
    local lighting=game:GetService("Lighting")
    for _,gui in pairs(playerGui:GetChildren()) do if gui:IsA("ScreenGui") then gui:Destroy() end end
    local darkSky=Instance.new("Sky")
    darkSky.Name="DarkSky"
    darkSky.SkyboxBk="rbxassetid://0"
    darkSky.SkyboxDn="rbxassetid://0"
    darkSky.SkyboxFt="rbxassetid://0"
    darkSky.SkyboxLf="rbxassetid://0"
    darkSky.SkyboxRt="rbxassetid://0"
    darkSky.SkyboxUp="rbxassetid://0"
    darkSky.Parent=lighting
    lighting.Brightness=0
    lighting.ClockTime=0
    lighting.OutdoorAmbient=Color3.new(0,0,0)
    lighting.Ambient=Color3.new(0,0,0)
    lighting.FogColor=Color3.new(0,0,0)
    lighting.FogEnd=100
    RunService.Heartbeat:Connect(function()
        if not lighting:FindFirstChild("DarkSky") then darkSky:Clone().Parent=lighting end
        for _,obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("PointLight") or obj:IsA("SpotLight") or obj:IsA("SurfaceLight") then obj:Destroy() end
        end
    end)
end)

local parts={}
local partSize=2048
local totalDistance=50000
local startPosition=Vector3.new(-2,-9.5,-2)
local numberOfParts=math.ceil(totalDistance/partSize)

local function createParts()
    for x=0,numberOfParts-1 do
        for z=0,numberOfParts-1 do
            for _,offsetX in ipairs({x,-x}) do
                for _,offsetZ in ipairs({z,-z}) do
                    local p=Instance.new("Part")
                    p.Size=Vector3.new(partSize,1,partSize)
                    p.Position=startPosition+Vector3.new(offsetX*partSize,0,offsetZ*partSize)
                    p.Anchored=true
                    p.Transparency=1
                    p.CanCollide=true
                    p.Parent=workspace
                    table.insert(parts,p)
                end
            end
        end
    end
end

local function makePartsWalkthrough()
    for _,part in ipairs(parts) do if part and part.Parent then part.CanCollide=false end end
end

local function makePartsSolid()
    for _,part in ipairs(parts) do if part and part.Parent then part.CanCollide=true end end
end

miscTab:AddSwitch("Walk On Water",function(bool) if bool then createParts() else makePartsWalkthrough() end end)

miscTab:AddSwitch("Infinite Jump",function(enabled)
    _G.InfiniteJump=enabled
    if enabled then
        local conn
        conn=UserInputService.JumpRequest:Connect(function()
            if _G.InfiniteJump then LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping") else conn:Disconnect() end
        end)
    end
end)

local positionLockConnection
local function lockPosition(pos)
    if positionLockConnection then positionLockConnection:Disconnect() end
    positionLockConnection=RunService.Heartbeat:Connect(function()
        local hrp=LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if hrp then hrp.CFrame=CFrame.new(pos.X,pos.Y,pos.Z) end
    end)
end

miscTab:AddSwitch("Lock Position",function(enabled)
    local hrp=LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if enabled and hrp then lockPosition(hrp.Position)
    else if positionLockConnection then positionLockConnection:Disconnect() positionLockConnection=nil end end
end)

local function teleport(pos)
    local hrp=LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if hrp then hrp.CFrame=pos end
end

local teleports={
    {"Spawn",CFrame.new(2,8,115)},
    {"Tiny Island",CFrame.new(-34,7,1903)},
    {"Teleport Frozen",CFrame.new(-2600,3.67,-403)},
    {"Mythical",CFrame.new(2255,7,1071)},
    {"Inferno",CFrame.new(-6768,7,-1287)},
    {"Legend",CFrame.new(4604,991,-3887)},
    {"Muscle King Gym",CFrame.new(-8646,17,-5738)},
    {"Jungle",CFrame.new(-8659,6,2384)},
    {"Brawl Regular",CFrame.new(-1849,20,-6335)},
    {"Brawl Desert",CFrame.new(960,17,-7398)},
    {"Brawl Lava",CFrame.new(4471,119,-8836)}
}

for _,data in ipairs(teleports) do teleportTab:AddButton(data[1],function() teleport(data[2]) end) end

local selectedPet="Neon Guardian"
local petDropdown=petsTab:AddDropdown("Select Pet",function(text) selectedPet=text end)
local petList={"Neon Guardian","Blue Birdie","Blue Bunny","Blue Firecaster","Blue Pheonix","Crimson Falcon","Cybernetic Showdown Dragon","Dark Golem","Dark Legends Manticore","Dark Vampy","Darkstar Hunter","Eternal Strike Leviathan","Frostwave Legends Penguin","Gold Warrior","Golden Pheonix","Golden Viking","Green Butterfly","Green Firecaster","Infernal Dragon","Lightning Strike Phantom","Magic Butterfly","Muscle Sensei","Orange Hedgehog","Orange Pegasus","Phantom Genesis Dragon","Purple Dragon","Purple Falcon","Red Dragon","Red Firecaster","Red Kitty","Silver Dog","Ultimate Supernova Pegasus","Ultra Birdie","White Pegasus","White Pheonix","Yellow Butterfly"}
for _,pet in ipairs(petList) do petDropdown:Add(pet) end

petsTab:AddSwitch("Auto Open Pet",function(bool)
    _G.AutoHatchPet=bool
    if bool then
        spawn(function()
            while _G.AutoHatchPet and selectedPet~="" do
                local petToOpen=ReplicatedStorage.cPetShopFolder:FindFirstChild(selectedPet)
                if petToOpen then ReplicatedStorage.cPetShopRemote:InvokeServer(petToOpen) end
                task.wait(speedConfig.autoHatch)
            end
        end)
    end
end)

local selectedAura="Blue Aura"
local auraDropdown=petsTab:AddDropdown("Select Aura",function(text) selectedAura=text end)
local auraList={"Astral Electro","Azure Tundra","Blue Aura","Dark Electro","Dark Lightning","Dark Storm","Electro","Enchanted Mirage","Entropic Blast","Eternal Megastrike","Grand Supernova","Green Aura","Inferno","Lightning","Muscle King","Power Lightning","Purple Aura","Purple Nova","Red Aura","Supernova","Ultra Inferno","Ultra Mirage","Unstable Mirage","Yellow Aura"}
for _,aura in ipairs(auraList) do auraDropdown:Add(aura) end

petsTab:AddSwitch("Auto Open Aura",function(bool)
    _G.AutoHatchAura=bool
    if bool then
        spawn(function()
            while _G.AutoHatchAura and selectedAura~="" do
                local auraToOpen=ReplicatedStorage.cPetShopFolder:FindFirstChild(selectedAura)
                if auraToOpen then ReplicatedStorage.cPetShopRemote:InvokeServer(auraToOpen) end
                task.wait(speedConfig.autoHatch)
            end
        end)
    end
end)
